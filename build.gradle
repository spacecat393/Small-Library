buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		maven { url = 'https://repo.spongepowered.org/maven' }
		mavenCentral()
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
	}
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'

version = mod_version
group = mod_group
archivesBaseName = mod_id

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
	mappings channel: mappings_channel, version: mappings_version

	runs {
		client {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'
			arg '-torg.spongepowered.asm.launch.MixinTweaker'
		}

		server {
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'
			arg '-torg.spongepowered.asm.launch.MixinTweaker'
		}
	}
}

repositories {
	maven { url = 'https://repo.spongepowered.org/maven' }
	flatDir {
		dir 'libs'
	}
}

configurations {
	embed
	compile.extendsFrom(embed)
}

dependencies {
	minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

	embed('org.spongepowered:mixin:0.8.3-SNAPSHOT') {
		exclude module: 'guava'
		exclude module: 'commons-io'
		exclude module: 'gson'
	}

//	implementation fg.deobf(files('libs/nali-2023-11-12.jar'))
	implementation fg.deobf("com.nali:nali:2023-11-12")
//	implementation fg.deobf(name: 'nali', version: '2023-11-12')
}

processResources {
	inputs.property 'version', project.version
	inputs.property 'mcversion', minecraft_version

	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		expand 'mod_id': mod_id, 'mod_name': mod_name, 'version': project.version,
				'mcversion': minecraft_version, 'mod_description': mod_description,
				'mod_author': mod_author
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

mixin {
	add sourceSets.main, mod_mixin_refmap.replace('${mod_id}', mod_id)
	config mod_mixin_configs.replace('${mod_id}', mod_id)
}

jar {
	from {
		configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
	} {
		exclude 'LICENSE.txt', 'META-INF/MANIFSET.MF', 'META-INF/maven/**', 'META-INF/*.RSA', 'META-INF/*.SF'
	}

	manifest {
		attributes 'ForceLoadAsMod': 'true'
		attributes 'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker'
		attributes 'TweakOrder': '0'
	}
}

sourceSets.all { it.output.resourcesDir = it.output.classesDirs.getFiles().iterator().next() }

jar.finalizedBy('reobfJar')

//!
//buildscript {
//	repositories {
//		mavenCentral()
//		maven { url = "https://maven.minecraftforge.net/" }
//	}
//
//	dependencies {
//		classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+"
//	}
//}
//
//apply plugin: "java"
//apply plugin: "net.minecraftforge.gradle"
//
//java.toolchain.languageVersion = JavaLanguageVersion.of(8)
//compileJava {
//	sourceCompatibility = "8"
//	targetCompatibility = "8"
//}
//
//repositories {
//	maven {
//		url = "https://maven.minecraftforge.net/"
//	}
//}
//
//dependencies {
//	minecraft "net.minecraftforge:forge:1.12.2-14.23.5.2860"
//}
//
//minecraft {
//	mappings channel: "stable", version: "39-1.12"
//
//	runs {
//		"client" {
//			workingDirectory file("./run")
//			mods { "${project.name}" { source sourceSets.main } }
//		}
//
//		"server" {
//			workingDirectory file("./run/server")
//			mods { "${project.name}" { source sourceSets.main } }
//		}
//	}
//}
//
//processResources {
//	inputs.property "version", project.version
//
//	filesMatching("mcmod.info") {
//		expand "version": project.version
//	}
//}
//
////When Forge 1.12 loads mods from a directory that's been put on the classpath, it expects to find resources in the same directory.
////Default Gradle behavior puts resources in ./build/resources/main instead of ./build/classes/main/java. Let's change that.
//sourceSets.all { it.output.resourcesDir = it.output.classesDirs.getFiles().iterator().next() }
//
////p
//org.gradle.jvmargs=-Xmx2G
//
//group=com.nali
//name=cutepomi
//version=1.0